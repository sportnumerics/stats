service: sportnumerics-stats
provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: ap-southeast-2
  variableSyntax: "\\${{([\\s\\S]+?)}}"
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - "lambda:InvokeFunction"
    Resource: ${{self:custom.predictLambdaArn}}
  - Effect: "Allow"
    Action:
      - "dynamodb:UpdateItem"
    Resource:
      - ${{self:custom.divisionsTableArn}}
      - ${{self:custom.teamsTableArn}}
  environment:
    PREDICT_LAMBDA_ARN: ${{self:custom.predictLambdaArn}}
    RESULTS_TABLE: ${{self:custom.teamsTableName}}
    DIVISIONS_TABLE: ${{self:custom.divisionsTableName}}
    TEAMS_QUEUE_URL: ${{self:custom.teamsQueueUrl}}
package:
  exclude:
  - config/env.sh
custom:
  tableVersion: 5
  teamsTableName: sportnumerics-stats-teams-${{opt:stage}}-v${{self:custom.tableVersion}}
  teamsTableArn:
    Fn::Join:
    - ":"
    - - "arn:aws:dynamodb"
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${{self:custom.teamsTableName}}
  divisionsTableName: sportnumerics-stats-divs-${{opt:stage}}-v${{self:custom.tableVersion}}
  divisionsTableArn:
    Fn::Join:
    - ":"
    - - "arn:aws:dynamodb"
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${{self:custom.divisionsTableName}}
  predictLambdaArn:
    Fn::Join:
    - ":"
    - - "arn:aws:lambda"
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - "function"
      - "sportnumerics-predict-${{opt:stage}}-predict"
  teamsQueueUrl:
    Ref: PendingTeamsQueue

resources: ${{file(resources.yml)}}

functions:
  collectAllTeamsForReduction:
    handler: handler.collectAllTeamsForReduction
    timeout: 60
  reduceOneTeam:
    handler: handler.reduceOneTeam
    timeout: 20