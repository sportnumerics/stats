Resources:
  S3BucketStats:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${file(serverless.yml):custom.resultsBucketName}
      AccessControl: "PublicRead"
      WebsiteConfiguration:
        IndexDocument: "does-not-exist.html"
  StatsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3BucketStats
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: "s3:GetObject"
            Principal: "*"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: S3BucketStats
                  - "/*"
  TeamsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: year
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: year
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: ${file(serverless.yml):custom.teamsTableName}
  DivisionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: year
          AttributeType: S
      KeySchema:
        - AttributeName: year
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: ${file(serverless.yml):custom.divisionsTableName}
