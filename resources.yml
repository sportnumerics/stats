Resources:
  TeamsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: year
          AttributeType: S
        - AttributeName: div
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: year
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: schedule
          KeySchema:
            - AttributeName: year
              KeyType: HASH
            - AttributeName: div
              KeyType: RANGE
          Projection:
            NonKeyAttributes:
              - name
              - schedule
              - ratings
            ProjectionType: INCLUDE
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 10
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName: ${{file(serverless.yml):custom.teamsTableName}}
  DivisionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: year
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: year
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: ${{file(serverless.yml):custom.divisionsTableName}}
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString: ${{file(state-machine.yml)}}
      RoleArn:
        Fn::GetAtt: [StateMachineRole, Arn]
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - Fn::Join:
                  - "."
                  - - states
                    - Ref: AWS::Region
                    - amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: StateMachinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "lambda:InvokeFunction"
                Resource:
                  - Fn::GetAtt: [CollectAllTeamsForReductionLambdaFunction, Arn]
                  - Fn::GetAtt: [ReduceTeamsLambdaFunction, Arn]
  PendingTeamsQueue:
    Type: AWS::SQS::Queue

Outputs:
  DivsTableName:
    Description: Divs table name in DynamoDB
    Value:
      Ref: DivisionsTable
  TeamsTableName:
    Description: Teams table name in DynamoDB
    Value:
      Ref: TeamsTable
